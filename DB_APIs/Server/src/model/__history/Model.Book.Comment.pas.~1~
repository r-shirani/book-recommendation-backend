unit Model.Book.Comment;

interface

uses
  MVCFramework.Serializer.Commons,
  MVCFramework.ActiveRecord,
  MVCFramework.Nullables,
  System.SysUtils;

type
  [MVCNameCase(ncLowerCase)]
  [MVCTable('Book.Comment')]
  TComment = class(TMVCActiveRecord)
  private
    [MVCTableField('CommentID', [foPrimaryKey, foAutoGenerated])]
    FCommentID: Int64;

    [MVCTableField('UserID')]
    FUserID: Int64;

    [MVCTableField('BookID')]
    FBookID: Int64;

    [MVCTableField('Text')]
    FText: NullableString;

    [MVCTableField('CommentRefID')]
    FCommentRefID: NullableInt64;

    [MVCTableField('CreatedAt')]
    FCreatedAt: TDateTime;

    [MVCTableField('LikeCount')]
    FLikeCount: NullableInt32;

    [MVCTableField('DisLikeCount')]
    FDisLikeCount: NullableInt32;

    [MVCTableField('IsBlocked')]
    FIsBlocked: NullableBoolean;

    [MVCTableField('IsEdited')]
    FIsEdited: NullableBoolean;

    [MVCTableField('IsSpoiled')]
    FIsSpoiled: NullableBoolean;

    [MVCTableField('ReportCount')]
    FReportCount: NullableInt32;

    [MVCTableField('ReportID')]
    FReportID: NullableInt64;

  public
    property CommentID: Int64 read FCommentID write FCommentID;
    property UserID: Int64 read FUserID write FUserID;
    property BookID: Int64 read FBookID write FBookID;
    property Text: NullableString read FText write FText;
    property CommentRefID: NullableInt64 read FCommentRefID write FCommentRefID;
    property CreatedAt: TDateTime read FCreatedAt write FCreatedAt;
    property LikeCount: NullableInt32 read FLikeCount write FLikeCount;
    property DisLikeCount: NullableInt32 read FDisLikeCount write FDisLikeCount;
    property IsBlocked: NullableBoolean read FIsBlocked write FIsBlocked;
    property IsEdited: NullableBoolean read FIsEdited write FIsEdited;
    property IsSpoiled: NullableBoolean read FIsSpoiled write FIsSpoiled;
    property ReportCount: NullableInt32 read FReportCount write FReportCount;
    property ReportID: NullableInt64 read FReportID write FReportID;
  end;

implementation

end.

