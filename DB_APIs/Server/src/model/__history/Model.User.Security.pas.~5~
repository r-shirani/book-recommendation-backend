unit Model.User.Security;

interface

uses
  MVCFramework.Serializer.Commons,
  MVCFramework.ActiveRecord,
  MVCFramework.Nullables,
  System.SysUtils;

type
  [MVCNameCase(ncLowerCase)]
  [MVCTable('User.Security')]
  TUser_Security = class(TMVCActiveRecord)
  private
    [MVCTableField('ID', [foPrimaryKey, foAutoGenerated])]
    fID: Int64;

    [MVCTableField('UserID')]
    fUserID: Int64;

    [MVCTableField('PassHint')]
    fPassHint: NullableString;

    [MVCTableField('LastLogin')]
    fLastLogin: TDateTime;

    [MVCTableField('Status')]
    fStatus: Byte;

    [MVCTableField('LockOutEnd')]
    fLockOutEnd: NullableDate;

    [MVCTableField('IsEmailVerified')]
    fIsEmailVerified: Boolean;

    [MVCTableField('IsPhoneVerified')]
    fIsPhoneVerified: Boolean;

    [MVCTableField('FailedLoginAttempts')]
    fFailedLoginAttempts: Byte;

    [MVCTableField('CreateDate')]
    fCreateDate: TDateTime;

    [MVCTableField('ClientEmailID')]
    fClientEmailID: NullableString;

    [MVCTableField('PasswordHash')]
    fPasswordHash: String;

    [MVCTableField('Salt')]
    fSalt: NullableString;

    [MVCTableField('VerificationCode')]
    fVerificationCode: NullableString;

  public
    property ID: Int64 read fID write fID;
    property UserID: Int64 read fUserID write fUserID;
    property PassHint: NullableString read fPassHint write fPassHint;
    property LastLogin: TDateTime read fLastLogin write fLastLogin;
    property Status: Byte read fStatus write fStatus;
    property LockOutEnd: NullableDate read fLockOutEnd write fLockOutEnd;
    property IsEmailVerified: Boolean read fIsEmailVerified write fIsEmailVerified;
    property IsPhoneVerified: Boolean read fIsPhoneVerified write fIsPhoneVerified;
    property FailedLoginAttempts: Byte read fFailedLoginAttempts write fFailedLoginAttempts;
    property CreateDate: TDateTime read fCreateDate write fCreateDate;
    property ClientEmailID: NullableString read fClientEmailID write fClientEmailID;
    property PasswordHash: String read fPasswordHash write fPasswordHash;
    property Salt: NullableString read fSalt write fSalt;
    property VerificationCode: NullableString read fVerificationCode write fVerificationCode;
  end;

implementation

end.

