Unit Model.Book.Image;

Interface

Uses
    MVCFramework.Serializer.Commons,
    MVCFramework.ActiveRecord,
    MVCFramework.Nullables;

Type
    [MVCNameCase(ncLowerCase)]
    [MVCTable('Book.Image')]
    TImage = Class(TMVCActiveRecord)
    Private
        [MVCTableField('ID', [foPrimaryKey, foAutoGenerated])]
        FID: Int64;

        [MVCTableField('ImageGuid')]
        FImageGuid: string;

        [MVCTableField('BookID')]
        FBookID: Int64;

        [MVCTableField('IsPrimary')]
        FIsPrimary: NullableBoolean;

        [MVCTableField('UploadDate')]
        FUploadDate: NullableTDateTime;

        [MVCTableField('FileSizeKB')]
        FFileSizeKB: NullableInt32;

        [MVCTableField('ContentType')]
        FContentType: NullableString;

        [MVCTableField('OriginalFileName')]
        FOriginalFileName: NullableString;

        [MVCTableField('ImageUrl')]
        FImageUrl: NullableString;

        [MVCTableField('Width')]
        FWidth: NullableInt32;

        [MVCTableField('Height')]
        FHeight: NullableInt32;

    Public
        constructor Create; override;

        // Properties
        Property ID: Int64 read FID write FID;
        Property ImageGuid: string read FImageGuid write FImageGuid;
        Property BookID: Int64 read FBookID write FBookID;
        Property IsPrimary: NullableBoolean read FIsPrimary write FIsPrimary;
        Property UploadDate: NullableTDateTime read FUploadDate write FUploadDate;
        Property FileSizeKB: NullableInt32 read FFileSizeKB write FFileSizeKB;
        Property ContentType: NullableString read FContentType write FContentType;
        Property OriginalFileName: NullableString read FOriginalFileName write FOriginalFileName;
        Property ImageUrl: NullableString read FImageUrl write FImageUrl;
        Property Width: NullableInt32 read FWidth write FWidth;
        Property Height: NullableInt32 read FHeight write FHeight;
    End;

Implementation

Uses
  System.SysUtils;

{ TImage }

Constructor TImage.Create;
Begin

End;

End.
